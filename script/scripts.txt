Analysis 1:-
	(A)
	statewise['Recovery Rate'] = statewise["Cured"]*100/statewise["Confirmed"]
	statewise['Mortality Rate'] = statewise["Deaths"]*100/statewise["Confirmed"]

	Rec = statewise["Recovery Rate"].sum()
	Mor = statewise["Mortality Rate"].sum()
	px.pie(names=["Recovery Rate", "Mortality Rate"], values=[Rec,Mor], title = "Recovery and Mortality Rate")

	(B)
	# Male vs Female Vaccination

	male = vaccination["Male(Individuals Vaccinated)"].sum()
	female = vaccination["Female(Individuals Vaccinated)"].sum()
	px.pie(names=["Male", "Female"], values=[male,female], title = "Male and Female Vaccination")

	For Pivot Table:-
	statewise = pd.pivot_table(covid_df, values =["Confirmed", "Deaths", "Cured"], index = "State/UnionTerritory", aggfunc = max)

Analysis 2:-
	# Finding Active Cases
	covid_df['Active cases'] = covid_df['Confirmed'] - (covid_df['Cured'] + covid_df['Deaths'])
	covid_df.tail()
	
	top_10_active_cases = covid_df.groupby(by= 'State/UnionTerritory').max()[['Active cases', 'Date']].sort_values(by = ['Active cases'], ascending = False).reset_index()
	fig = plt.figure(figsize=(16,9))
	plt.title("Top 10 states with most active cases in India", size = 25)
	ax = sns.barplot(data = top_10_active_cases.iloc[:10], y='Active cases', x = 'State/UnionTerritory', linewidth = 2, edgecolor = 'red')

	plt.xlabel("States")
	plt.ylabel("Total Active Cases")
	plt.show()



	top_10_deaths = covid_df.groupby(by = 'State/UnionTerritory').max()[['Deaths','Date']].sort_values(by =['Deaths'], ascending = False).reset_index()
	fig = plt.figure(figsize=(16,9))
	plt.title("Top 10 states with most deaths cases in India", size = 25)
	ax = sns.barplot(data = top_10_deaths.iloc[:12], y='Deaths', x = 'State/UnionTerritory', linewidth = 2, edgecolor = 'red')

	plt.xlabel("States")
	plt.ylabel("Total Active Cases")
	plt.show()

Analysis 3:-
	# Growth Trends

	fig = plt.figure(figsize=(12,6))

	ax = sns.lineplot(data = covid_df[covid_df['State/UnionTerritory'].isin(['Maharastra','Karnataka','Kerela','Tamil Nadu','Uttar Pradesh']),
                                  x ='Date', y ='Active cases'])
	ax.set_title("Top 5 Affected states in India", size = 16)


Data Wrangling :-

CSV TO JSON
import pandas as pd

#Function to convert all CSV files to JSON
def convert_toJSON(filename):
    print('READING CSV FILE')
    csv_df = pd.read_csv(filename)
    print('CONVERTING BACK TO JSON')
    csv_df.to_json('BackToJSON'+filename[:-4]+'.json', orient="records")

#calling convert_toJSON() to convert all created CSV files back to JSON
convert_toJSON('covid_vaccine_statewise.csv')
convert_toJSON('covid_19_india.csv')
print('All FILES DONE')



JSON TO CSV
import pandas as pd


def convert_toCSV(filename):
    print('READING JSON FILE')
    json_df = pd.read_json(filename)
    print('CONVERTING  BACK TO CSV FILE')
    json_df.to_csv('BackToCSV'+filename[:-5]+'.csv', index=False)



convert_toCSV('covid_vaccine_statewise.json')
convert_toCSV('covid_19_india.json')


	
